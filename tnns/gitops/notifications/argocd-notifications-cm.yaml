apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: openshift-gitops
data:
  context: |
    argocdUrl: https://argocd-server-openshift-gitops.apps.example.com
    environmentName: prod
  service.slack: |
    token: $slack-token
    username: "argocd"
    icon: ":robot_face:"
  service.email.smtp: |
    host: smtp.example.com
    port: 587
    from: $email-username
    username: $email-username
    password: $email-password
    html: true

  template.app-sync-succeeded: |
    message: |
      ✅ *{{.app.metadata.name}}* synced to *{{.context.environmentName}}* (rev: `{{.app.status.sync.revision}}`).
      <{{.context.argocdUrl}}/applications/{{.app.metadata.name}}|Open in Argo CD>
    email:
      subject: "[ArgoCD] {{.app.metadata.name}} sync Succeeded"
  template.app-sync-failed: |
    message: |
      ❌ *{{.app.metadata.name}}* sync *FAILED* on *{{.context.environmentName}}*.
      <{{.context.argocdUrl}}/applications/{{.app.metadata.name}}|Check details>
    email:
      subject: "[ArgoCD] {{.app.metadata.name}} sync FAILED"
  template.app-health-degraded: |
    message: |
      ⚠️ *{{.app.metadata.name}}* health is *{{.app.status.health.status}}*.
      <{{.context.argocdUrl}}/applications/{{.app.metadata.name}}|Open in Argo CD>
    email:
      subject: "[ArgoCD] {{.app.metadata.name}} health degraded"
  trigger.on-sync-succeeded: |
    - when: app.status.operationState.phase in ['Succeeded'] && app.status.sync.status == 'Synced'
      send: [ app-sync-succeeded ]
  trigger.on-sync-failed: |
    - when: app.status.operationState.phase in ['Error', 'Failed']
      send: [ app-sync-failed ]
  trigger.on-health-degraded: |
    - when: app.status.health.status not in ['Healthy', 'Progressing']
      send: [ app-health-degraded ]
